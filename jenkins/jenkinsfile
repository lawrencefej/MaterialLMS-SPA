def VERSION

pipeline {
    agent any
    stages {
        stage('initialize_variables') {
          // environment {
          //   // commit = "${ env.GIT_COMMIT }"
          //   // // tag = sh(script: 'git tag --points-at=HEAD', returnStdout: true)?.trim()
          //   // tag = getTag()
          //   // tag2 = sh(script: "git describe --tags ${commit}", returnStdout: true)?.trim()
          // }
          steps {
            script {
              VERSION = getVersion()
              // if (env.tag) {
              //   echo 'setting version as tag'
              //   version = tag
              //         } else {
              //   echo 'setting version as commit'
              //   version = commit
              // }
              // echo "commit = ${commit}"
              // version = getVersion()
              echo "version = ${env.VERSION}"
            //   echo "tag = ${tag}"
            // echo "tag2 = ${tag2}"
            }
          }
        }
        stage('Clone the repo') {
      steps {
        echo "commit = ${env.GIT_COMMIT}"
        echo "version = ${env.VERSION}"
        echo "commit take 7 = ${env.GIT_COMMIT.take(7)}"
      }
        }
    }
}

String getVersion() {
  tag = sh(script: 'git tag --points-at=HEAD', returnStdout: true)?.trim()
  desc = sh(script: "git describe --tags ${env.GIT_COMMIT}", returnStdout: true)?.trim()
  echo "tag = ${env.tag}"
  echo "desc = ${env.desc}"

  if (env.tag) {
    echo 'returning tag'
    return env.tag
  }

  echo 'returning commit sha'
  echo "commit in the func = ${env.GIT_COMMIT}"
  return env.GIT_COMMIT.take(7)
}
